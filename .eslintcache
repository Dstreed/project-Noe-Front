[{"/home/walh/Desktop/projets/project-Noe-Front/src/index.js":"1","/home/walh/Desktop/projets/project-Noe-Front/src/reportWebVitals.js":"2","/home/walh/Desktop/projets/project-Noe-Front/src/App.js":"3","/home/walh/Desktop/projets/project-Noe-Front/src/hooks/useWeb3.js":"4","/home/walh/Desktop/projets/project-Noe-Front/src/hooks/useContract.js":"5","/home/walh/Desktop/projets/project-Noe-Front/src/Dapp.js":"6","/home/walh/Desktop/projets/project-Noe-Front/src/hooks/web3-utils.js":"7","/home/walh/Desktop/projets/project-Noe-Front/src/contracts/NoeContract.js":"8","/home/walh/Desktop/projets/project-Noe-Front/src/components/Register.js":"9","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/AjoutAnimal.js":"10","/home/walh/Desktop/projets/project-Noe-Front/src/components/Footer.js":"11","/home/walh/Desktop/projets/project-Noe-Front/src/components/Nav.js":"12","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/ModificationAnimal.js":"13","/home/walh/Desktop/projets/project-Noe-Front/src/components/Admin.js":"14","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/NavVeterinaire.js":"15","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/ProfilVeterinaire.js":"16","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/RechercheAnimal.js":"17","/home/walh/Desktop/projets/project-Noe-Front/src/components/Home.js":"18","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_particulier/ProfilParticulier.js":"19","/home/walh/Desktop/projets/project-Noe-Front/src/components/CommentçaMarche.js":"20","/home/walh/Desktop/projets/project-Noe-Front/src/components/Contact.js":"21","/home/walh/Desktop/projets/project-Noe-Front/src/components/Temoignage.js":"22","/home/walh/Desktop/projets/project-Noe-Front/src/components/ChiffresCles.js":"23","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_particulier/NavParticulier.js":"24"},{"size":1095,"mtime":1607429054413,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1606302343427,"results":"27","hashOfConfig":"26"},{"size":407,"mtime":1606984560867,"results":"28","hashOfConfig":"26"},{"size":7456,"mtime":1606467225523,"results":"29","hashOfConfig":"26"},{"size":502,"mtime":1606984560871,"results":"30","hashOfConfig":"26"},{"size":1296,"mtime":1607868480317,"results":"31","hashOfConfig":"26"},{"size":1012,"mtime":1607439158651,"results":"32","hashOfConfig":"26"},{"size":13382,"mtime":1607878778224,"results":"33","hashOfConfig":"26"},{"size":3562,"mtime":1607700264052,"results":"34","hashOfConfig":"26"},{"size":3895,"mtime":1607429054413,"results":"35","hashOfConfig":"26"},{"size":1206,"mtime":1606984560867,"results":"36","hashOfConfig":"26"},{"size":6609,"mtime":1607868473089,"results":"37","hashOfConfig":"26"},{"size":2166,"mtime":1607429054413,"results":"38","hashOfConfig":"26"},{"size":4497,"mtime":1607429054409,"results":"39","hashOfConfig":"26"},{"size":4194,"mtime":1607868473089,"results":"40","hashOfConfig":"26"},{"size":1255,"mtime":1607868473089,"results":"41","hashOfConfig":"26"},{"size":1894,"mtime":1607429054413,"results":"42","hashOfConfig":"26"},{"size":2526,"mtime":1607700264052,"results":"43","hashOfConfig":"26"},{"size":2465,"mtime":1607868473089,"results":"44","hashOfConfig":"26"},{"size":1841,"mtime":1607429054409,"results":"45","hashOfConfig":"26"},{"size":1358,"mtime":1607429054409,"results":"46","hashOfConfig":"26"},{"size":1839,"mtime":1607429054409,"results":"47","hashOfConfig":"26"},{"size":1104,"mtime":1607429054409,"results":"48","hashOfConfig":"26"},{"size":1877,"mtime":1607429054409,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"bqb1ki",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/walh/Desktop/projets/project-Noe-Front/src/index.js",[],["106","107"],"/home/walh/Desktop/projets/project-Noe-Front/src/reportWebVitals.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/App.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/hooks/useWeb3.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/hooks/useContract.js",["108","109"],"import { ethers } from 'ethers'\nimport React, { useState, useEffect, useContext } from 'react'\nimport { Web3Context } from './useWeb3'\n\nexport const useContract = (address, abi) => {\n  const [web3State, _] = useContext(Web3Context)\n  const [contract, setContract] = useState(null)\n  useEffect(() => {\n    if (web3State.signer) {\n      setContract(new ethers.Contract(address, abi, web3State.signer))\n    } else {\n      setContract(null)\n    }\n  }, [web3State.signer, address, abi])\n  return contract\n}\n","/home/walh/Desktop/projets/project-Noe-Front/src/Dapp.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/hooks/web3-utils.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/contracts/NoeContract.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/Register.js",["110","111"],"import React, { useContext, useState, } from 'react'\nimport { Center, Button, Stack, Input, Heading, FormControl, Box, SimpleGrid, VStack, FormLabel } from '@chakra-ui/core'\n// import { Link } from 'react-router-dom';\nimport Nav from './Nav'\nimport Footer from './Footer'\nimport { NoeContext } from '../App'\n\n\nfunction Register() {\n\n  const noe = useContext(NoeContext)\n\n  const [inputValueName, setInputValueName] = useState(null)\n  const [inputValuePhoneNumber, setInputValuePhoneNumber] = useState(null)\n  const [inputValueNameMember, setInputValueNameMember] = useState(null)\n  const [inputValuePhoneMember, setInputValuePhoneMember] = useState(null)\n\n\n  const handleOnClickCreateMember = async () => {\n    const CMTX1 = await noe.createMember(inputValueNameMember, inputValuePhoneMember)\n  }\n\n  const handleOnClickCreateVeterinary = async () => {\n    const CVTX1 = await noe.createVeterinary(inputValueName, inputValuePhoneNumber)\n  }\n\n  return (\n    <>\n      <Nav />\n      <VStack py={20} fontFamily=\"Montserrat\">\n        <Box my={10} >\n          <SimpleGrid columns={[1, 1, 2]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Inscription Vétérinaires</Heading>\n              </Center>\n              <FormControl isRequired>\n                <Stack>\n                  <FormLabel pt={10} htmlFor=\"nom\">Nom</FormLabel >\n                  <Input id=\"nom\"\n                    value={inputValueName} onChange={(e) => { setInputValueName(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Nom\" />\n                  <FormLabel pt={10} htmlFor=\"mobile\">Mobile</FormLabel >\n                  <Input mb={20} id=\"mobile\"\n                    value={inputValuePhoneNumber} onChange={(e) => { setInputValuePhoneNumber(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Mobile\" aria-label=\"Mobile\" />\n                  <Button name=\"button\" _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" textTransform='uppercase' onClick={handleOnClickCreateVeterinary}>Inscription</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Inscription Particuliers</Heading>\n              </Center>\n              <FormControl isRequired >\n                <Stack >\n                  <FormLabel htmlFor=\"nom\" pt={10}>Nom</FormLabel>\n                  <Input id=\"nom\" value={inputValueNameMember} onChange={(e) => { setInputValueNameMember(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Nom\" aria-label=\"Nom\" />\n                  <FormLabel htmlFor=\"mobile\" pt={10}>Mobile</FormLabel>\n                  <Input mb={20} id=\"mobile\" value={inputValuePhoneMember} onChange={(e) => { setInputValuePhoneMember(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Mobile\" aria-label=\"Mobile\" />\n                  <Button name=\"button\" _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" onClick={handleOnClickCreateMember} textTransform='uppercase' >Inscription</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n  )\n}\n\nexport default Register\n","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/AjoutAnimal.js",["112"],"import React, { useContext, useState } from 'react'\nimport { Center, Button, Stack, Input, Heading, FormControl, Box, SimpleGrid, VStack, FormLabel, Select } from '@chakra-ui/core'\nimport Footer from '../Footer'\nimport NavVeteinaire from './NavVeterinaire'\nimport { NoeContext } from '../../App'\n\n\nfunction AjoutAnimal() {\n\n  const noe = useContext(NoeContext)\n\n  const [inputValueAddAdress, setInputValueAddAdress] = useState(null)\n  const [inputValueAddName, setInputValueAddName] = useState(null)\n  const [inputValueAddSexe, setInputValueAddSexe] = useState(null)\n  const [inputValueAddDate, setInputValueAddDate] = useState(null)\n  const [inputValueAddType, setInputValueAddType] = useState([\"Chien\", \"Chat\", \"Furet\"])\n  const [inputValueAddVaccin, setInputValueAddVaccin] = useState(null)\n\n\n  const handleOnClickAddAnimal = async () => {\n    const APVTX = await noe.animalToken(inputValueAddAdress, inputValueAddName, inputValueAddDate, inputValueAddSexe, inputValueAddVaccin, inputValueAddType)\n  }\n\n\n  return (\n    <>\n      <NavVeteinaire />\n      <VStack py={20} fontFamily=\"Montserrat\">\n        <Box my={10}>\n          <SimpleGrid columns={[1]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Ajouter un Animal</Heading>\n              </Center>\n              <FormControl>\n                <Stack >\n                  <FormLabel htmlFor=\"ETH\" pt={5}>ETH</FormLabel>\n                  <Input value={inputValueAddAdress} onChange={(e) => { setInputValueAddAdress(e.currentTarget.value) }}\n                    id='ETH' variant=\"filled\" placeholder=\"Adresse ETH\" aria-label=\"ETH\" />\n                  <FormLabel htmlFor=\"ETH\" pt={5}>Nom</FormLabel>\n                  <Input value={inputValueAddName} onChange={(e) => { setInputValueAddName(e.currentTarget.value) }}\n                    id='ETH' variant=\"filled\" placeholder=\"nom\" aria-label=\"nom\" />\n                  <FormLabel htmlFor=\"Date\" pt={5}>Date de naissance</FormLabel>\n                  <Input value={inputValueAddDate} onChange={(e) => { setInputValueAddDate(e.currentTarget.value) }}\n                    id='sexe' variant=\"filled\" placeholder=\"Date de naissance\" aria-label=\"Date de naissance\" />\n                  <FormLabel htmlFor=\"date-de-naissance\" pt={5}>Sexe</FormLabel>\n                  <Input value={inputValueAddSexe} onChange={(e) => { setInputValueAddSexe(e.currentTarget.value) }}\n                    id='date-de-naissance' variant=\"filled\" placeholder=\"Sexe\" aria-label=\"Sexe\" />\n                  <FormLabel htmlFor=\"type\" pt={5}>Vaccin</FormLabel>\n                  <Select value={inputValueAddVaccin} onChange={(e) => { setInputValueAddVaccin(e.currentTarget.value) }}\n                    id='vaccin' variant=\"filled\" placeholder=\"Est-il vacciné ?\" aria-label=\"Vaccin\" >\n                    <option>Oui</option>\n                    <option>Non</option>\n                  </Select>\n                  <FormLabel htmlFor=\"type\" pt={5}>Type</FormLabel>\n                  <Select value={inputValueAddType} onChange={(e) => { setInputValueAddType(e.currentTarget.value) }}\n                    mb={20} id='type' variant=\"filled\" placeholder=\"Sélectionner le type\" aria-label=\"Type\" >\n                    <option value=\"0\">Chien</option>\n                    <option value=\"1\">Chat</option>\n                    <option value=\"2\">Furet</option>\n                  </Select>\n                  <Button onClick={handleOnClickAddAnimal} _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" name=\"button\" textTransform='uppercase'>Ajouter</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n\n  )\n}\n\nexport default AjoutAnimal\n","/home/walh/Desktop/projets/project-Noe-Front/src/components/Footer.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/Nav.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/ModificationAnimal.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/Admin.js",["113"],"import React, { useContext, useState } from 'react'\nimport { Button, Input, FormControl, Center, Box, SimpleGrid, VStack, Stack, Heading, Text, FormLabel } from '@chakra-ui/core'\nimport Nav from \"./Nav\"\nimport Footer from './Footer'\nimport { NoeContext } from '../App'\n\n\nfunction Admin() {\n\n  const noe = useContext(NoeContext)\n\n  const [inputValueAdressVet, setInputValueAdressVet] = useState(null)\n  const [inputValueVetApproval, setInputValueVetApproval] = useState(null)\n  const [getName, setGetName] = useState(null)\n  const [getSymbole, setGetSymbole] = useState(null)\n  const [getAnimalCount, setGetAnimalCount] = useState(null)\n  const [getVetApproval, setGetVetApproval] = useState(null)\n\n  const handleOnClickApproveVet = async () => {\n    const APVTX = await noe.approveVeterinary(inputValueAdressVet)\n  }\n\n  const handleOnClickGetName = async () => {\n    try {\n      const res = await noe.name()\n      setGetName(res.toString())\n    } catch (e) {\n    }\n  }\n\n  const handleOnClickGetSymbole = async () => {\n    try {\n      const res = await noe.symbol()\n      setGetSymbole(res.toString())\n    } catch (e) {\n    }\n  }\n\n  const handleOnClickGetAnimalCount = async () => {\n    try {\n      const res = await noe.animalsCount()\n      setGetAnimalCount(res.toString())\n    } catch (e) {\n    }\n  }\n\n  const handleOnClickGetVetApproval = async () => {\n    try {\n      const res = await noe.veterinary(inputValueVetApproval)\n      console.log(res)\n      setGetVetApproval(res.toString())\n    } catch (e) {\n    }\n  }\n\n  return (\n    <>\n      <Nav />\n      <VStack py={20} fontFamily=\"Montserrat\">\n        <Box my={10}>\n          <SimpleGrid columns={[1, 1, 2]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Approuvre vétérinaire</Heading>\n              </Center>\n              <Center>\n                <FormControl>\n                  <Stack my={10} >\n                    <FormLabel htmlFor=\"approuve\"></FormLabel>\n                    <Input mb={20} id=\"approuve\" value={inputValueAdressVet} onChange={(e) => { setInputValueAdressVet(e.currentTarget.value) }}\n                      type=\"text\" placeholder=\"Approuve vétérinaire\" variant=\"filled\" aria-label=\"approuve vétérinaire\" />\n                    <Button name=\"button\" _hover={{\n                      bg: \"teal.500\",\n                      color: \"white\",\n                    }} bg=\"brand.900\" color=\"white\" onClick={handleOnClickApproveVet} my={10} textTransform='uppercase'>Approuve</Button>\n                  </Stack>\n                </FormControl >\n              </Center>\n            </Box>\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Liste</Heading>\n              </Center>\n              <Box>\n                <Button onClick={handleOnClickGetName} my={5} _hover={{\n                  bg: \"teal.500\",\n                  color: \"white\",\n                }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Name</Button>\n                <Text>{getName}</Text>\n              </Box>\n              <Box>\n                <Button onClick={handleOnClickGetSymbole} my={5} _hover={{\n                  bg: \"teal.500\",\n                  color: \"white\",\n                }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Symbole</Button>\n                <Text>{getSymbole}</Text>\n              </Box>\n              <Box>\n                <Button onClick={handleOnClickGetAnimalCount} my={5} _hover={{\n                  bg: \"teal.500\",\n                  color: \"white\",\n                }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Animal count</Button>\n                <Text>{getAnimalCount}</Text>\n              </Box>\n              <Box>\n                <Input value={inputValueVetApproval} onChange={(e) => { setInputValueVetApproval(e.currentTarget.value) }}\n                  type=\"text\" placeholder=\"Adresse ETH\" variant=\"filled\" aria-label=\"adresse ETH\" />\n                <Button onClick={handleOnClickGetVetApproval} my={5} _hover={{\n                  bg: \"teal.500\",\n                  color: \"white\",\n                }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Veterinary Check Approval</Button>\n                <Text>{getVetApproval}</Text>\n              </Box>\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n  )\n}\n\nexport default Admin\n","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/NavVeterinaire.js",["114"],"import React, { useContext, useState } from 'react'\nimport { Button, Box, Divider, Input, FormControl, Image, Flex, Center, Spacer, InputGroup, SimpleGrid, Text } from '@chakra-ui/core'\nimport { Link } from 'react-router-dom';\nimport Logo from '../../assets/logo.png'\nimport Burger from '../../assets/menu.svg'\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n  DrawerCloseButton,\n  useDisclosure,\n  Icon\n} from \"@chakra-ui/core\"\nimport { NoeContext } from '../../App'\nvar Web3 = require('web3');\n\nfunction NavVeteinaire() {\n\n\n  const wallet = new Web3(Web3.givenProvider)\n  console.log(Web3.givenProvider)\n\n  const noe = useContext(NoeContext)\n\n  const [inputAnimalById, setInputAnimalById] = useState(null)\n  const [getValueAnimalById, setGetValueAnimalById] = useState(null)\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const btnRef = React.useRef()\n\n  const handleOnClickGetAnimalByID = async () => {\n    try {\n      const res = await noe.getAnimalById(inputAnimalById)\n      console.log(res)\n      setGetValueAnimalById(res.toString())\n    } catch (e) {\n    }\n  }\n\n  return (\n    <>\n      <Flex fontFamily=\"Montserrat\">\n        <Box py={3}>\n          <Link to=\"/\">\n            <Image boxSize=\"100px\" objectFit=\"cover\" src={Logo} alt=\"logo\" />\n          </Link>\n        </Box>\n        <Spacer />\n\n        <Button name=\"button\" variant=\"link\" ref={btnRef} onClick={onOpen} size=\"sm\" py={10} mr={10} >\n          <Image boxSize=\"25px\" src={Burger} alt=\"menu\" />\n        </Button>\n        <Drawer\n          isOpen={isOpen}\n          placement=\"right\"\n          onClose={onClose}\n          finalFocusRef={btnRef}\n        >\n          <DrawerOverlay>\n            <DrawerContent>\n              <DrawerCloseButton />\n              <DrawerBody>\n                <Box py={10}>\n                  <SimpleGrid py={5} mb={10}>\n                    <FormControl >\n                      <InputGroup>\n                        <Input _hover={{\n                          color: \"brand.900\",\n                        }} value={inputAnimalById} onChange={(e) => { setInputAnimalById(e.currentTarget.value) }} borderColor=\"brand.100\" id=\"search\" size=\"md\" type=\"search\" variant=\"outline\" placeholder=\"Recherche animaux\" />\n                        <Center>\n                          <Button onClick={handleOnClickGetAnimalByID} name=\"button\" _hover={{\n                            bg: \"teal.500\",\n                            fill: \"white\",\n                          }} bg=\"brand.100\" fill=\"white\">\n                            <Icon viewBox=\"0 0 512.005 512.005\" color=\"white\" >\n                              <path d=\"M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667\n\t\t\tS0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6\n\t\t\tc4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z\n\t\t\t M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z\"/>\n                            </Icon>\n                          </Button>\n                        </Center>\n                      </InputGroup>\n                    </FormControl>\n                  </SimpleGrid>\n                  <Text>{getValueAnimalById}</Text>\n                  <Spacer />\n                  <Divider borderWidth=\"1px\" />\n                  <Box my={10} fontFamily=\"Montserrat\">\n\n                    <Button name=\"button\" mr={5} color=\"brand.900\" textTransform='uppercase' variant=\"link\">\n                      <Link to=\"/profil_veterinaire\">Mon espace</Link>\n                    </Button>\n                  </Box>\n                  <Box fontFamily=\"Montserrat\">\n                    <Button name=\"button\" mr={5} color=\"brand.900\" textTransform='uppercase' variant=\"link\">\n                      <Link to=\"/\">Deconnexion</Link>\n                    </Button>\n                  </Box>\n                </Box>\n              </DrawerBody>\n            </DrawerContent>\n          </DrawerOverlay>\n        </Drawer>\n      </Flex>\n      <Divider borderWidth=\"1px\" />\n    </>\n  )\n}\n\nexport default NavVeteinaire\n\n\n","/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/ProfilVeterinaire.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_veterinaire/RechercheAnimal.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/Home.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_particulier/ProfilParticulier.js",["115"],"import React, { useContext } from 'react'\nimport { Heading, Text, Box, SimpleGrid, Image, Center, Input } from '@chakra-ui/core'\nimport NavParticulier from './NavParticulier'\nimport Footer from '../Footer'\nimport Man from '../../assets/man.svg'\nimport cat_profil from '../../assets/cat_profil.svg'\nimport { NoeContext } from '../../App'\n\n\n\n\n\nfunction ProfilParticulier() {\n\n  const noe = useContext(NoeContext)\n\n  return (\n    <>\n      <NavParticulier />\n      <Center>\n        <Heading fontFamily=\"Montserrat\" mt={10} as=\"h2\">Mon espace</Heading>\n      </Center>\n      <Box fontFamily=\"Montserrat\">\n        <SimpleGrid my={20} mx={20} columns={[1, 1, 3]} spacing=\"40px\" p={30} fontFamily=\"Montserrat\" borderWidth=\"1px\" bg='brand.900' color='white' borderRadius={5}>\n          <Box>\n            <Image mb={10} borderRadius=\"full\" boxSize=\"100px\" objectFit=\"cover\" src={Man} alt=\"avatar\" />\n          </Box>\n          <Box>\n            <Text fontWeight=\"bold\">Nom :</Text>\n            <Input isDisabled mb={20}></Input>\n            <Text fontWeight=\"bold\">Téléphone :</Text>\n            <Input isDisabled />\n          </Box>\n          <Box>\n            <Text fontWeight=\"bold\">Adresse ETH :</Text>\n            <Input isDisabled mb={20} />\n          </Box>\n        </SimpleGrid>\n      </Box>\n      <Center>\n        <Heading mt={20} fontFamily=\"Montserrat\" as=\"h2\">Mes animaux</Heading>\n      </Center>\n      <Box fontFamily=\"Montserrat\" mb={200}>\n        <SimpleGrid my={20} mx={20} columns={[1, 1, 4]} spacing=\"40px\" p={30} fontFamily=\"Montserrat\" borderWidth=\"1px\" borderRadius={5}>\n          <Box>\n            <Image mb={10} borderRadius=\"full\" boxSize=\"100px\" objectFit=\"cover\" src={cat_profil} alt=\"avatar animal\" />\n          </Box>\n          <Box>\n            <Text fontWeight=\"bold\">ID</Text>\n            <Input isDisabled mb={20} />\n            <Text fontWeight=\"bold\">Nom:</Text>\n            <Input isDisabled />\n          </Box>\n          <Box>\n            <Text fontWeight=\"bold\">Date de naissance:</Text>\n            <Input isDisabled mb={20} />\n            <Text fontWeight=\"bold\">Sexe:</Text>\n            <Input isDisabled />\n          </Box>\n          <Box>\n            <Text fontWeight=\"bold\">Vaccin:</Text>\n            <Input isDisabled mb={20} />\n            <Text fontWeight=\"bold\">Type:</Text>\n            <Input isDisabled />\n          </Box>\n        </SimpleGrid>\n      </Box>\n      <Footer />\n    </>\n  )\n}\n\nexport default ProfilParticulier\n","/home/walh/Desktop/projets/project-Noe-Front/src/components/CommentçaMarche.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/Contact.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/Temoignage.js",[],"/home/walh/Desktop/projets/project-Noe-Front/src/components/ChiffresCles.js",[],["116","117"],"/home/walh/Desktop/projets/project-Noe-Front/src/components/espace_particulier/NavParticulier.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"122","severity":1,"message":"126","line":6,"column":21,"nodeType":"124","messageId":"125","endLine":6,"endColumn":22},{"ruleId":"122","severity":1,"message":"127","line":20,"column":11,"nodeType":"124","messageId":"125","endLine":20,"endColumn":16},{"ruleId":"122","severity":1,"message":"128","line":24,"column":11,"nodeType":"124","messageId":"125","endLine":24,"endColumn":16},{"ruleId":"122","severity":1,"message":"129","line":21,"column":11,"nodeType":"124","messageId":"125","endLine":21,"endColumn":16},{"ruleId":"122","severity":1,"message":"129","line":20,"column":11,"nodeType":"124","messageId":"125","endLine":20,"endColumn":16},{"ruleId":"122","severity":1,"message":"130","line":21,"column":9,"nodeType":"124","messageId":"125","endLine":21,"endColumn":15},{"ruleId":"122","severity":1,"message":"131","line":15,"column":9,"nodeType":"124","messageId":"125","endLine":15,"endColumn":12},{"ruleId":"118","replacedBy":"132"},{"ruleId":"120","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'_' is assigned a value but never used.","'CMTX1' is assigned a value but never used.","'CVTX1' is assigned a value but never used.","'APVTX' is assigned a value but never used.","'wallet' is assigned a value but never used.","'noe' is assigned a value but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation"]