[{"/home/walh/Bureau/Noe/project-Noe-Front/src/index.js":"1","/home/walh/Bureau/Noe/project-Noe-Front/src/reportWebVitals.js":"2","/home/walh/Bureau/Noe/project-Noe-Front/src/App.js":"3","/home/walh/Bureau/Noe/project-Noe-Front/src/Dapp.js":"4","/home/walh/Bureau/Noe/project-Noe-Front/src/useContext/useContract.js":"5","/home/walh/Bureau/Noe/project-Noe-Front/src/contracts/NoeContract.js":"6","/home/walh/Bureau/Noe/project-Noe-Front/src/components/Home.js":"7","/home/walh/Bureau/Noe/project-Noe-Front/src/components/Admin.js":"8","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_veterinaire/AjoutAnimal.js":"9","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_veterinaire/ProfilVeterinaire.js":"10","/home/walh/Bureau/Noe/project-Noe-Front/src/components/Register.js":"11","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_particulier/ProfilParticulier.js":"12","/home/walh/Bureau/Noe/project-Noe-Front/src/components/Footer.js":"13","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_veterinaire/NavVeterinaire.js":"14","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_particulier/NavParticulier.js":"15","/home/walh/Bureau/Noe/project-Noe-Front/src/components/Nav.js":"16","/home/walh/Bureau/Noe/project-Noe-Front/src/components/Contact.js":"17","/home/walh/Bureau/Noe/project-Noe-Front/src/components/Temoignage.js":"18","/home/walh/Bureau/Noe/project-Noe-Front/src/components/CommentçaMarche.js":"19","/home/walh/Bureau/Noe/project-Noe-Front/src/components/ChiffresCles.js":"20"},{"size":1090,"mtime":1607939279180,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607185744183,"results":"23","hashOfConfig":"22"},{"size":412,"mtime":1607939279180,"results":"24","hashOfConfig":"22"},{"size":974,"mtime":1607939279180,"results":"25","hashOfConfig":"22"},{"size":496,"mtime":1607939279180,"results":"26","hashOfConfig":"22"},{"size":15417,"mtime":1607958322466,"results":"27","hashOfConfig":"22"},{"size":2094,"mtime":1607939279180,"results":"28","hashOfConfig":"22"},{"size":4497,"mtime":1607439911700,"results":"29","hashOfConfig":"22"},{"size":3895,"mtime":1607939279180,"results":"30","hashOfConfig":"22"},{"size":2673,"mtime":1607963883687,"results":"31","hashOfConfig":"22"},{"size":4711,"mtime":1607946277680,"results":"32","hashOfConfig":"22"},{"size":3380,"mtime":1607964053883,"results":"33","hashOfConfig":"22"},{"size":1206,"mtime":1607185744179,"results":"34","hashOfConfig":"22"},{"size":4194,"mtime":1607939279180,"results":"35","hashOfConfig":"22"},{"size":1877,"mtime":1607439911704,"results":"36","hashOfConfig":"22"},{"size":6834,"mtime":1607946277676,"results":"37","hashOfConfig":"22"},{"size":1358,"mtime":1607439911700,"results":"38","hashOfConfig":"22"},{"size":1839,"mtime":1607439911704,"results":"39","hashOfConfig":"22"},{"size":1841,"mtime":1607439911700,"results":"40","hashOfConfig":"22"},{"size":1104,"mtime":1607439911700,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6jfhl9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/walh/Bureau/Noe/project-Noe-Front/src/index.js",[],["89","90"],"/home/walh/Bureau/Noe/project-Noe-Front/src/reportWebVitals.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/App.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/Dapp.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/useContext/useContract.js",["91"],"import { ethers } from 'ethers'\nimport { useState, useEffect, useContext } from 'react'\nimport { Web3Context } from \"web3-hooks\"\n\nexport const useContract = (address, abi) => {\n  const [web3State, _] = useContext(Web3Context)\n  const [contract, setContract] = useState(null)\n  useEffect(() => {\n    if (web3State.signer) {\n      setContract(new ethers.Contract(address, abi, web3State.signer))\n    } else {\n      setContract(null)\n    }\n  }, [web3State.signer, address, abi])\n  return contract\n}\n","/home/walh/Bureau/Noe/project-Noe-Front/src/contracts/NoeContract.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/Home.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/Admin.js",["92"],"import React, { useContext, useState } from 'react'\nimport { Button, Input, FormControl, Center, Box, SimpleGrid, VStack, Stack, Heading, Text, FormLabel } from '@chakra-ui/core'\nimport Nav from \"./Nav\"\nimport Footer from './Footer'\nimport { NoeContext } from '../App'\n\n\nfunction Admin() {\n\n  const noe = useContext(NoeContext)\n\n  const [inputValueAdressVet, setInputValueAdressVet] = useState(null)\n  const [inputValueVetApproval, setInputValueVetApproval] = useState(null)\n  const [getName, setGetName] = useState(null)\n  const [getSymbole, setGetSymbole] = useState(null)\n  const [getAnimalCount, setGetAnimalCount] = useState(null)\n  const [getVetApproval, setGetVetApproval] = useState(null)\n\n  const handleOnClickApproveVet = async () => {\n    const APVTX = await noe.approveVeterinary(inputValueAdressVet)\n  }\n\n  const handleOnClickGetName = async () => {\n    try {\n      const res = await noe.name()\n      setGetName(res.toString())\n    } catch (e) {\n    }\n  }\n\n  const handleOnClickGetSymbole = async () => {\n    try {\n      const res = await noe.symbol()\n      setGetSymbole(res.toString())\n    } catch (e) {\n    }\n  }\n\n  const handleOnClickGetAnimalCount = async () => {\n    try {\n      const res = await noe.animalsCount()\n      setGetAnimalCount(res.toString())\n    } catch (e) {\n    }\n  }\n\n  const handleOnClickGetVetApproval = async () => {\n    try {\n      const res = await noe.veterinary(inputValueVetApproval)\n      console.log(res)\n      setGetVetApproval(res.toString())\n    } catch (e) {\n    }\n  }\n\n  return (\n    <>\n      <Nav />\n      <VStack py={20} fontFamily=\"Montserrat\">\n        <Box my={10}>\n          <SimpleGrid columns={[1, 1, 2]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Approuvre vétérinaire</Heading>\n              </Center>\n              <Center>\n                <FormControl>\n                  <Stack my={10} >\n                    <FormLabel htmlFor=\"approuve\"></FormLabel>\n                    <Input mb={20} id=\"approuve\" value={inputValueAdressVet} onChange={(e) => { setInputValueAdressVet(e.currentTarget.value) }}\n                      type=\"text\" placeholder=\"Approuve vétérinaire\" variant=\"filled\" aria-label=\"approuve vétérinaire\" />\n                    <Button name=\"button\" _hover={{\n                      bg: \"teal.500\",\n                      color: \"white\",\n                    }} bg=\"brand.900\" color=\"white\" onClick={handleOnClickApproveVet} my={10} textTransform='uppercase'>Approuve</Button>\n                  </Stack>\n                </FormControl >\n              </Center>\n            </Box>\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Liste</Heading>\n              </Center>\n              <Box>\n                <Button onClick={handleOnClickGetName} my={5} _hover={{\n                  bg: \"teal.500\",\n                  color: \"white\",\n                }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Name</Button>\n                <Text>{getName}</Text>\n              </Box>\n              <Box>\n                <Button onClick={handleOnClickGetSymbole} my={5} _hover={{\n                  bg: \"teal.500\",\n                  color: \"white\",\n                }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Symbole</Button>\n                <Text>{getSymbole}</Text>\n              </Box>\n              <Box>\n                <Button onClick={handleOnClickGetAnimalCount} my={5} _hover={{\n                  bg: \"teal.500\",\n                  color: \"white\",\n                }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Animal count</Button>\n                <Text>{getAnimalCount}</Text>\n              </Box>\n              <Box>\n                <Input value={inputValueVetApproval} onChange={(e) => { setInputValueVetApproval(e.currentTarget.value) }}\n                  type=\"text\" placeholder=\"Adresse ETH\" variant=\"filled\" aria-label=\"adresse ETH\" />\n                <Button onClick={handleOnClickGetVetApproval} my={5} _hover={{\n                  bg: \"teal.500\",\n                  color: \"white\",\n                }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Veterinary Check Approval</Button>\n                <Text>{getVetApproval}</Text>\n              </Box>\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n  )\n}\n\nexport default Admin\n","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_veterinaire/AjoutAnimal.js",["93"],"import React, { useContext, useState } from 'react'\nimport { Center, Button, Stack, Input, Heading, FormControl, Box, SimpleGrid, VStack, FormLabel, Select } from '@chakra-ui/core'\nimport Footer from '../Footer'\nimport NavVeteinaire from './NavVeterinaire'\nimport { NoeContext } from '../../App'\n\n\nfunction AjoutAnimal() {\n\n  const noe = useContext(NoeContext)\n\n  const [inputValueAddAdress, setInputValueAddAdress] = useState(null)\n  const [inputValueAddName, setInputValueAddName] = useState(null)\n  const [inputValueAddSexe, setInputValueAddSexe] = useState(null)\n  const [inputValueAddDate, setInputValueAddDate] = useState(null)\n  const [inputValueAddType, setInputValueAddType] = useState([\"Chien\", \"Chat\", \"Furet\"])\n  const [inputValueAddVaccin, setInputValueAddVaccin] = useState(null)\n\n\n  const handleOnClickAddAnimal = async () => {\n    const APVTX = await noe.animalToken(inputValueAddAdress, inputValueAddName, inputValueAddDate, inputValueAddSexe, inputValueAddVaccin, inputValueAddType)\n  }\n\n\n  return (\n    <>\n      <NavVeteinaire />\n      <VStack py={20} fontFamily=\"Montserrat\">\n        <Box my={10}>\n          <SimpleGrid columns={[1]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Ajouter un Animal</Heading>\n              </Center>\n              <FormControl>\n                <Stack >\n                  <FormLabel htmlFor=\"ETH\" pt={5}>ETH</FormLabel>\n                  <Input value={inputValueAddAdress} onChange={(e) => { setInputValueAddAdress(e.currentTarget.value) }}\n                    id='ETH' variant=\"filled\" placeholder=\"Adresse ETH\" aria-label=\"ETH\" />\n                  <FormLabel htmlFor=\"nom\" pt={5}>Nom</FormLabel>\n                  <Input value={inputValueAddName} onChange={(e) => { setInputValueAddName(e.currentTarget.value) }}\n                    id='nom' variant=\"filled\" placeholder=\"nom\" aria-label=\"nom\" />\n                  <FormLabel htmlFor=\"Date\" pt={5}>Date de naissance</FormLabel>\n                  <Input value={inputValueAddDate} onChange={(e) => { setInputValueAddDate(e.currentTarget.value) }}\n                    id='sexe' variant=\"filled\" placeholder=\"Date de naissance\" aria-label=\"Date de naissance\" />\n                  <FormLabel htmlFor=\"date-de-naissance\" pt={5}>Sexe</FormLabel>\n                  <Input value={inputValueAddSexe} onChange={(e) => { setInputValueAddSexe(e.currentTarget.value) }}\n                    id='date-de-naissance' variant=\"filled\" placeholder=\"Sexe\" aria-label=\"Sexe\" />\n                  <FormLabel htmlFor=\"type\" pt={5}>Vaccin</FormLabel>\n                  <Select value={inputValueAddVaccin} onChange={(e) => { setInputValueAddVaccin(e.currentTarget.value) }}\n                    id='vaccin' variant=\"filled\" placeholder=\"Est-il vacciné ?\" aria-label=\"Vaccin\" >\n                    <option>Oui</option>\n                    <option>Non</option>\n                  </Select>\n                  <FormLabel htmlFor=\"type\" pt={5}>Type</FormLabel>\n                  <Select value={inputValueAddType} onChange={(e) => { setInputValueAddType(e.currentTarget.value) }}\n                    mb={20} id='type' variant=\"filled\" placeholder=\"Sélectionner le type\" aria-label=\"Type\" >\n                    <option value=\"0\">Chien</option>\n                    <option value=\"1\">Chat</option>\n                    <option value=\"2\">Furet</option>\n                  </Select>\n                  <Button onClick={handleOnClickAddAnimal} _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" name=\"button\" textTransform='uppercase'>Ajouter</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n\n  )\n}\n\nexport default AjoutAnimal\n","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_veterinaire/ProfilVeterinaire.js",["94"],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/Register.js",["95","96","97"],"import React, { useContext, useState } from 'react'\nimport { Center, Button, Stack, Input, Heading, FormControl, Box, SimpleGrid, VStack, FormLabel } from '@chakra-ui/core'\nimport Nav from './Nav'\nimport Footer from './Footer'\nimport { NoeContext } from '../App'\nimport { Web3Context } from \"web3-hooks\"\nimport { useHistory } from \"react-router-dom\"\n \n\n\nfunction Register() {\n\n  const [web3State, login] = useContext(Web3Context);\n  const noe = useContext(NoeContext)\n  // const toast = useToast()\n  const history = useHistory()\n\n  const [inputValueName, setInputValueName] = useState(null)\n  const [inputValuePhoneNumber, setInputValuePhoneNumber] = useState(null)\n  const [inputValueNameMember, setInputValueNameMember] = useState(null)\n  const [inputValuePhoneMember, setInputValuePhoneMember] = useState(null)\n\n\n  const handleOnClickCreateMember = async () => {\n    try {\n    const CMTX1 = await noe.createMember(inputValueNameMember, inputValuePhoneMember)\n      const cb = () => {\n        history.push(\"/profil_particulier\")\n        \n      }\n      const filter = noe.filters.MemberCreated(web3State.account)\n      noe.once(filter, cb)\n  } catch (e) {\n\n  }\n}\n\n  const handleOnClickCreateVeterinary = async () => {\n    try {\n    const CVTX1 = await noe.createVeterinary(inputValueName, inputValuePhoneNumber)\n    const cb = () => {\n      history.push(\"/profil_veterinaire\")\n      \n    }\n    const filter = noe.filters.VeterinaryCreated(web3State.account)\n    noe.once(filter, cb)\n} catch (e) {\n\n}\n  }\n\n\n  // useEffect(() => {\n  //   if (noe) {\n  //     const cb = (_address) => {\n  //       toast({\n  //         position: 'bottom',\n  //         title: `SET`,\n  //         description: `send by ${_address}`,\n  //         status: 'success',\n  //         duration: 10000,\n  //         isClosable: true,\n  //       })\n  //     }\n  //     console.log('USEEFFECT CALLED FOR TOAST')\n  //     noe.on('MemberCreated', cb)\n  //     return () => {\n  //       console.log('USEEFFECT CLEANUP FOR TOAST')\n  //       noe.off('MemberCreated', cb)\n  //     }\n  //   }\n  // }, [noe, toast])\n\n  return (\n    <>\n      <Nav />\n      <VStack py={20} fontFamily=\"Montserrat\">\n        <Box my={10} >\n          <SimpleGrid columns={[1, 1, 2]} spacing=\"40px\">\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Inscription Vétérinaires</Heading>\n              </Center>\n              <FormControl isRequired>\n                <Stack>\n                  <FormLabel pt={10} htmlFor=\"nom\">Nom</FormLabel >\n                  <Input id=\"nom\"\n                    value={inputValueName} onChange={(e) => { setInputValueName(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Nom\" aria-label=\"nom\" />\n                  <FormLabel pt={10} htmlFor=\"mobile\">Mobile</FormLabel >\n                  <Input mb={20} id=\"mobile\"\n                    value={inputValuePhoneNumber} onChange={(e) => { setInputValuePhoneNumber(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Mobile\" aria-label=\"mobile\" />\n                  <Button name=\"button\" _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" textTransform='uppercase' onClick={handleOnClickCreateVeterinary}>Inscription</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n            <Box borderWidth=\"1px\" p={50} borderRadius={5}>\n              <Center>\n                <Heading fontFamily=\"Montserrat\" mb={10}>Inscription Particuliers</Heading>\n              </Center>\n              <FormControl isRequired >\n                <Stack >\n                  <FormLabel htmlFor=\"name\" pt={10}>Nom</FormLabel>\n                  <Input id=\"name\" value={inputValueNameMember} onChange={(e) => { setInputValueNameMember(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Nom\" aria-label=\"name\" />\n                  <FormLabel htmlFor=\"tel\" pt={10}>Mobile</FormLabel>\n                  <Input mb={20} id=\"tel\" value={inputValuePhoneMember} onChange={(e) => { setInputValuePhoneMember(e.currentTarget.value) }}\n                    variant=\"filled\" placeholder=\"Mobile\" aria-label=\"tel\" />\n                  <Button name=\"button\" _hover={{\n                    bg: \"teal.500\",\n                    color: \"white\",\n                  }} bg=\"brand.900\" color=\"white\" onClick={handleOnClickCreateMember} textTransform='uppercase' >Inscription</Button>\n                </Stack>\n              </FormControl >\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </VStack>\n      <Footer />\n    </>\n  )\n}\n\nexport default Register\n","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_particulier/ProfilParticulier.js",["98"],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/Footer.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_veterinaire/NavVeterinaire.js",["99"],"import React, { useContext, useState } from 'react'\nimport { Button, Box, Divider, Input, FormControl, Image, Flex, Center, Spacer, InputGroup, SimpleGrid, Text } from '@chakra-ui/core'\nimport { Link } from 'react-router-dom';\nimport Logo from '../../assets/logo.png'\nimport Burger from '../../assets/menu.svg'\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n  DrawerCloseButton,\n  useDisclosure,\n  Icon\n} from \"@chakra-ui/core\"\nimport { NoeContext } from '../../App'\nvar Web3 = require('web3');\n\nfunction NavVeteinaire() {\n\n\n  const wallet = new Web3(Web3.givenProvider)\n  console.log(Web3.givenProvider)\n\n  const noe = useContext(NoeContext)\n\n  const [inputAnimalById, setInputAnimalById] = useState(null)\n  const [getValueAnimalById, setGetValueAnimalById] = useState(null)\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const btnRef = React.useRef()\n\n  const handleOnClickGetAnimalByID = async () => {\n    try {\n      const res = await noe.getAnimalById(inputAnimalById)\n      console.log(res)\n      setGetValueAnimalById(res.toString())\n    } catch (e) {\n    }\n  }\n\n  return (\n    <>\n      <Flex fontFamily=\"Montserrat\">\n        <Box py={3}>\n          <Link to=\"/\">\n            <Image boxSize=\"100px\" objectFit=\"cover\" src={Logo} alt=\"logo\" />\n          </Link>\n        </Box>\n        <Spacer />\n\n        <Button name=\"button\" variant=\"link\" ref={btnRef} onClick={onOpen} size=\"sm\" py={10} mr={10} >\n          <Image boxSize=\"25px\" src={Burger} alt=\"menu\" />\n        </Button>\n        <Drawer\n          isOpen={isOpen}\n          placement=\"right\"\n          onClose={onClose}\n          finalFocusRef={btnRef}\n        >\n          <DrawerOverlay>\n            <DrawerContent>\n              <DrawerCloseButton />\n              <DrawerBody>\n                <Box py={10}>\n                  <SimpleGrid py={5} mb={10}>\n                    <FormControl >\n                      <InputGroup>\n                        <Input _hover={{\n                          color: \"brand.900\",\n                        }} value={inputAnimalById} onChange={(e) => { setInputAnimalById(e.currentTarget.value) }} borderColor=\"brand.100\" id=\"search\" size=\"md\" type=\"search\" variant=\"outline\" placeholder=\"Recherche animaux\" />\n                        <Center>\n                          <Button onClick={handleOnClickGetAnimalByID} name=\"button\" _hover={{\n                            bg: \"teal.500\",\n                            fill: \"white\",\n                          }} bg=\"brand.100\" fill=\"white\">\n                            <Icon viewBox=\"0 0 512.005 512.005\" color=\"white\" >\n                              <path d=\"M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667\n\t\t\tS0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6\n\t\t\tc4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z\n\t\t\t M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z\"/>\n                            </Icon>\n                          </Button>\n                        </Center>\n                      </InputGroup>\n                    </FormControl>\n                  </SimpleGrid>\n                  <Text>{getValueAnimalById}</Text>\n                  <Spacer />\n                  <Divider borderWidth=\"1px\" />\n                  <Box my={10} fontFamily=\"Montserrat\">\n\n                    <Button name=\"button\" mr={5} color=\"brand.900\" textTransform='uppercase' variant=\"link\">\n                      <Link to=\"/profil_veterinaire\">Mon espace</Link>\n                    </Button>\n                  </Box>\n                  <Box fontFamily=\"Montserrat\">\n                    <Button name=\"button\" mr={5} color=\"brand.900\" textTransform='uppercase' variant=\"link\">\n                      <Link to=\"/\">Deconnexion</Link>\n                    </Button>\n                  </Box>\n                </Box>\n              </DrawerBody>\n            </DrawerContent>\n          </DrawerOverlay>\n        </Drawer>\n      </Flex>\n      <Divider borderWidth=\"1px\" />\n    </>\n  )\n}\n\nexport default NavVeteinaire\n\n\n","/home/walh/Bureau/Noe/project-Noe-Front/src/components/espace_particulier/NavParticulier.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/Nav.js",["100","101"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Button, Box, Flex, Divider, Image, Spacer, Input, FormControl, Center, SimpleGrid, InputGroup, Text, } from '@chakra-ui/core'\nimport { Link } from 'react-router-dom';\nimport Logo from '../assets/logo.png'\nimport Burger from '../assets/menu.svg'\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n  DrawerCloseButton,\n  useDisclosure,\n  Icon,\n} from \"@chakra-ui/core\"\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  PopoverArrow,\n  Portal,\n  PopoverCloseButton,\n} from \"@chakra-ui/core\"\nimport { NoeContext } from '../App'\nimport { Web3Context } from \"web3-hooks\"\nimport { useHistory } from \"react-router-dom\"\n\n\n\nfunction Nav() {\n\n  const noe = useContext(NoeContext)\n  const [web3State, login] = useContext(Web3Context)\n  const history = useHistory()\n\n\n  const [inputAnimalById, setInputAnimalById] = useState(null)\n  const [getValueAnimalById, setGetValueAnimalById] = useState(null)\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const btnRef = React.useRef()\n\n\n  const handleOnClickGetAnimalByID = async () => {\n    try {\n      const res = await noe.getAnimalById(inputAnimalById)\n      console.log(res)\n      setGetValueAnimalById(res.toString())\n    } catch (e) {\n    }\n  }\n\n\n  // A VENIR -> Gerer l'etat de la Blockchain\n\n  // const [isRegistred, setIsRegistred] = useState(false)\n\n  // const handleStart = async () => {\n  //   await login()\n  //   // if(web3State.isLogged) {\n  //   //   console.log(\"test\")\n  //   //   //redirection here\n  //   //   history.push(\"/register\")}\n  //   }\n\n  // useEffect(() => {\n  //   if (web3State.isLogged === true && isRegistred === false) {\n  //     setIsRegistred(true)\n  //     history.push(\"/register\")\n  //   } \n\n  // }, [web3State.isLogged, history, isRegistred])\n\n  return (\n    <>\n      <Flex fontFamily=\"Montserrat \">\n        <Box py={3}>\n          <Link to=\"/\">\n            <Image boxSize=\"100px\" objectFit=\"cover\" src={Logo} alt=\"logo noé\" />\n          </Link>\n        </Box>\n        <Spacer />\n\n        <Box my={12} as=\"samp\" fontFamily=\"Montserrat \" fontSize=\"12px\" mr={6}>\n          <Popover>\n            <PopoverTrigger>\n              <Button name=\"button\" _hover={{\n                bg: \"teal.500\",\n                color: \"white\",\n              }} bg=\"brand.100\" color=\"white\" textTransform='uppercase'>Provider Status</Button>\n            </PopoverTrigger>\n            <Portal>\n              <PopoverContent>\n                <PopoverArrow />\n                <PopoverBody>\n                  <Text fontWeight='bold'>Web3: {web3State.isWeb3 ? (<Text color=\"green.500\">injected ✅ </Text>\n                  ) : (\n                      <Text color=\"red.500\">not found 🛑 </Text>\n                    )}</Text>\n                  <Text fontWeight='bold'>Wallet: {web3State.isLogged ?\n                    <Text color=\"green.500\">{web3State.isMetamask} Connected ✅ </Text>\n                    :\n                    <Text color=\"red.500\">{web3State.isMetamask} Disconnected 🛑 </Text>}</Text>\n                  <Text fontWeight='bold'>Network name: {web3State.networkName}</Text>\n                  <Text fontWeight='bold'>Network id: {web3State.chainId}</Text>\n                  <Text fontWeight='bold'>Account: {web3State.account}</Text>\n                  <Text fontWeight='bold'>Balance: {web3State.balance}</Text>\n                </PopoverBody>\n                <PopoverCloseButton />\n              </PopoverContent>\n            </Portal>\n          </Popover>\n\n          {!web3State.isLogged && (\n\n            <Button ml={10} name=\"button\" _hover={{\n              bg: \"teal.500\",\n              color: \"white\",\n            }} bg=\"brand.100\" color=\"white\" textTransform='uppercase' mr={5} onClick={login}>Start</Button>\n\n          )}\n\n        </Box>\n        {NoeContext !== null && web3State.chainId === 4 && (\n          <>\n            <Button name=\"button\" variant=\"link\" ref={btnRef} onClick={onOpen} size=\"sm\" py={10} mr={10} >\n              <Image boxSize=\"25px\" src={Burger} alt=\"menu burger\" />\n            </Button>\n            <Drawer\n              isOpen={isOpen}\n              placement=\"right\"\n              onClose={onClose}\n              finalFocusRef={btnRef}\n            >\n              <DrawerOverlay>\n                <DrawerContent>\n                  <DrawerCloseButton />\n                  <DrawerBody>\n                    <Box py={10}>\n                      <SimpleGrid py={5} mb={10}>\n                        <FormControl>\n                          <InputGroup>\n                            <Input _hover={{\n                              color: \"brand.900\",\n                            }} borderColor=\"brand.100\" value={inputAnimalById} onChange={(e) => { setInputAnimalById(e.currentTarget.value) }}\n                              size=\"md\" type=\"search\" variant=\"outline\" placeholder=\"Recherche animaux\" />\n                            <Center>\n                              <Button onClick={handleOnClickGetAnimalByID}\n                                _hover={{\n                                  bg: \"teal.500\",\n                                  fill: \"white\",\n                                }} bg=\"brand.100\">\n                                <Icon viewBox=\"0 0 512.005 512.005\" fill=\"white\" >\n                                  <path d=\"M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667\n\t\t\tS0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6\n\t\t\tc4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z\n\t\t\t M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z\"/>\n                                </Icon>\n                              </Button>\n                            </Center>\n                          </InputGroup>\n                        </FormControl>\n                      </SimpleGrid>\n                      <Text>{getValueAnimalById}</Text>\n                      <Spacer />\n                      <Box my={10} fontFamily=\"Montserrat\">\n                        <Button name=\"button\" _hover={{\n                          bg: \"brand.100\",\n                          color: \"white\",\n                        }} color=\"brand.100\" borderColor=\"brand.100\" textTransform='uppercase' mr={5} mb={5} variant=\"outline\">\n                          <Link to=\"/register\">espace inscription</Link>\n                        </Button>\n                      </Box>\n                    </Box>\n                  </DrawerBody>\n                </DrawerContent>\n              </DrawerOverlay>\n            </Drawer>\n          </>\n        )}\n      </Flex>\n\n\n      <Divider borderWidth=\"1px\" />\n    </>\n  )\n}\n\nexport default Nav\n","/home/walh/Bureau/Noe/project-Noe-Front/src/components/Contact.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/Temoignage.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/CommentçaMarche.js",[],"/home/walh/Bureau/Noe/project-Noe-Front/src/components/ChiffresCles.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":6,"column":21,"nodeType":"108","messageId":"109","endLine":6,"endColumn":22},{"ruleId":"106","severity":1,"message":"110","line":20,"column":11,"nodeType":"108","messageId":"109","endLine":20,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":21,"column":11,"nodeType":"108","messageId":"109","endLine":21,"endColumn":16},{"ruleId":"106","severity":1,"message":"111","line":12,"column":21,"nodeType":"108","messageId":"109","endLine":12,"endColumn":26},{"ruleId":"106","severity":1,"message":"111","line":13,"column":21,"nodeType":"108","messageId":"109","endLine":13,"endColumn":26},{"ruleId":"106","severity":1,"message":"112","line":26,"column":11,"nodeType":"108","messageId":"109","endLine":26,"endColumn":16},{"ruleId":"106","severity":1,"message":"113","line":40,"column":11,"nodeType":"108","messageId":"109","endLine":40,"endColumn":16},{"ruleId":"106","severity":1,"message":"111","line":14,"column":21,"nodeType":"108","messageId":"109","endLine":14,"endColumn":26},{"ruleId":"106","severity":1,"message":"114","line":21,"column":9,"nodeType":"108","messageId":"109","endLine":21,"endColumn":15},{"ruleId":"106","severity":1,"message":"115","line":1,"column":39,"nodeType":"108","messageId":"109","endLine":1,"endColumn":48},{"ruleId":"106","severity":1,"message":"116","line":34,"column":9,"nodeType":"108","messageId":"109","endLine":34,"endColumn":16},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","'APVTX' is assigned a value but never used.","'login' is assigned a value but never used.","'CMTX1' is assigned a value but never used.","'CVTX1' is assigned a value but never used.","'wallet' is assigned a value but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]